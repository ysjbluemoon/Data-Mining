geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.25, 1.25)
cv - cv_error
plot5 = data.frame(cv, cv_error,m)
cv = pcr.fit$results$RMSE
cv_error = pcr.fit$results$RMSESD/sqrt(5)
cutoff5 = min(cv) + cv_error[cv == min(cv)]
m = 0:8
plot5 = data.frame(cv, cv_error,m)
cv
cv_error
pcr.fit$results$RMSESD
m = 0:8
m
plot5 = data.frame(cv, cv_error,m)
plot5 = cbind(cv, cv_error,m)
plot5
plot5 = cbind(cv, cv_error,m) %>% as.tibble()
plot5
m_vline = min(plot5$m[which(plot5$cv < cutoff5)])
ggplot(pcr.fit) +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed")
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_path()+
geom_point(color = "red") +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed")
m_vline = min(plot5$m[which(plot5$cv < cutoff5)])
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_path()+
geom_point(color = "red") +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed")
ggplot(plot5, aes(x = m, y = cv)) +
#geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_path()+
geom_point(color = "red") +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed")
ggplot(plot5, aes(x = m, y = cv)) +
#geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed")
ggplot(pcr.fit) +
#geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed")
plot5
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.25, 1.25)
cv - cv_error
cv = pcr.fit$results$RMSE
cv_error = pcr.fit$results$RMSESD/sqrt(5)
cutoff5 = min(cv) + cv_error[cv == min(cv)]
m = 1:8
plot5 = cbind(cv, cv_error,m) %>% as.tibble()
m_vline = min(plot5$m[which(plot5$cv < cutoff5)])
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.25, 1.25)
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red")
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.5:0.9)
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.5,0.9)
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.5,0.75)
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.5,0.85)
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.55,0.85)
plot5 = cbind(cv, cv_error,m)
m_vline = min(plot5$m[which(plot5$cv < cutoff5)])
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.55,0.85)
plot5 = data_frame(cv, cv_error,m)
m_vline = min(plot5$m[which(plot5$cv < cutoff5)])
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.55,0.85)
pcr.fit$finalModel
pcr.fit$method
pcr.fit$results
pcr.fit$bestTune
pcr.fit$trainingData
pcr.fit$finalModel
coef(pcr.fit$method)
coef(pcr.fit$finalModel)
coef.pcr = coef(pcr.fit$finalModel)
coef.pcr
summary_table =cbind(coef.lasso.bic%>% as.matrix() , lasso.coef %>% as.matrix() , coef.pcr)
summary_table =cbind(coef.lasso.bic%>% as.matrix() , lasso.coef %>% as.matrix() , coef.pcr %>% as.matrix())
summary_table =cbind(coef.lasso.bic%>% as.matrix() , lasso.coef %>% as.matrix())
summary_table
coef.pcr
coef.lasso.bic
pcr.fit$finalModel$coefficients
coef.pcr = coef(pcr.fit$finalModel) %>% as.tibble()
coef.pcr
coef.pcr = coef(pcr.fit$finalModel)
coef.pcr
coef.pcr[1]
coef.pcr[0]
coef.pcr[,0]
coef.pcr[1]
str(coef.pcr)
str(coef.pcr)[1]
str(coef.pcr)
c("lcavol", "lweight", "age", "lbph","svi", "lcp", "gleason", "pgg45")
variables = c("lcavol", "lweight", "age", "lbph","svi", "lcp", "gleason", "pgg45")
variables = c("intercept","lcavol", "lweight", "age", "lbph","svi", "lcp", "gleason", "pgg45")
summary_table =cbind(variables,coef.lasso.bic%>% as.matrix() , lasso.coef %>% as.matrix())
summary_table
summary_table =cbind(variables,coef.lasso.bic%>% as.matrix() %>% as.tibble() , lasso.coef %>% as.matrix() %>% as.tibble())
summary_table
coef(lasso_bic, s = lambda_best) %>% as.matrix() %>% as.tibble()
coef.lasso.bic = coef(lasso_bic, s = lambda_best) %>% as.matrix() %>% as.tibble() %>% rename("Lasso BIC" = `1`)
coef.lasso.bic
coef.lasso.bic = coef(lasso_bic, s = lambda_best) %>% as.matrix() %>% as.tibble() %>% rename(Lasso BIC = `1`)
coef.lasso.bic = coef(lasso_bic, s = lambda_best) %>% as.matrix() %>% as.tibble() %>% rename(Lasso = `1`)
coef.lasso.bic
coef.lasso.bic = coef(lasso_bic, s = lambda_best) %>% as.matrix() %>% as.tibble() %>% rename(Lasso_BIC = `1`)
coef.lasso.bic
lasso.coef = coef.cv.glmnet(lasso_cv, s = lambda_best) %>% as.matrix() %>% as.tibble() %>% rename(LASSO_CV = `1`)
lasso.coef
test.lasso.cv
pred.lasso = predict.cv.glmnet(lasso_cv, newx = as.matrix(x_test), s = lambda_best)
resid = pred.lasso - y_test
test.lasso.cv = mean(resid^2)
test.lasso.cv.se = sqrt( var(resid^2) / length(resid) )
test.lasso.cv
test.lasso.cv.se
summary_table =cbind(variables,coef.lasso.bic%>% as.matrix() %>% as.tibble() , lasso.coef %>% as.matrix() %>% as.tibble())
summary_table
summary_table =
cbind(variables,coef.lasso.bic, lasso.coef )
summary_table
lasso.coef = coef.cv.glmnet(lasso_cv, s = lambda_best) %>% as.matrix() %>% as.tibble() %>% rename(LASSO_CV = `1`) %>% mutate(id = 1:9)
coef.lasso.bic =
coef(lasso_bic, s = lambda_best) %>%
as.matrix() %>%
as.tibble() %>%
rename(Lasso_BIC = `1`) %>%
mutate(id = 1:9)
coef.lasso.bic
variables = c("intercept", "lcavol", "lweight", "age", "lbph","svi", "lcp", "gleason", "pgg45")
id = 1:9
names = data_frame(id,variables )
names
summary_table =
inner_join(names, lasso.coef, by="id")
summary_table
summary_table =
inner_join(names, lasso.coef, by="id") %>%
inner_join(., coef.lasso.bic, by="id")
summary_table
coef.pcr
coef.pcr = coef(pcr.fit$finalModel) %>% as.tibble()
coef.pcr
coef.pcr =
coef(pcr.fit$finalModel) %>%
as.tibble() %>%
mutate(id = 2:9) %>%
rename(PCR = `.outcome.8 comps`)
coef.pcr
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
inner_join(., coef.pcr, by = "id")
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id")
summary_table
ggplot(plot2, aes(x = id, y = BIC)) +
geom_line() +
geom_point(color = "red") +
geom_hline(yintercept = cutoff2, linetype = "dashed")+
geom_vline(xintercept = 2, linetype = "dashed")+
labs(title = "Best Subset Regression BIC",
x = "Subset size",
y = "CV error")
bic.coef
bic.coef = bss_bic$BestModel$coefficients %>% broom::tidy()
bic.coef
bic.coef =
bss_bic$BestModel$coefficients %>%
broom::tidy() %>%
mutate(BestSubset_BIC = x)
bic.coef
bic.coef =
bss_bic$BestModel$coefficients %>%
broom::tidy() %>%
rename(BestSubset_BIC = x)
bic.coef
bic.coef =
bss_bic$BestModel$coefficients %>%
broom::tidy() %>%
rename(BestSubset_BIC = x) %>%
mutate(id=1:3)
bic.coef
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef, by = "id")
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef %>% select(BestSubset_BIC), by = "id")
bic.coef
bic.coef =
bss_bic$BestModel$coefficients %>%
broom::tidy() %>%
rename(BestSubset_BIC = x) %>%
mutate(id=1:3) %>%
select(-names)
bic.coef
bic.coef =
bss_bic$BestModel$coefficients %>%
broom::tidy() %>%
rename(BestSubset_BIC = x) %>%
mutate(id=1:3) %>%
select(id, BestSubset_BIC)
bic.coef
bic.coef[,2:3]
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id")
summary_table
bss.coef
bss.coef =
bss_cv$BestModel$coefficients %>%
broom::tidy() %>%
rename(BestSubset_CV = x)
bss.coef
bss.coef =
bss_cv$BestModel$coefficients %>%
broom::tidy() %>%
rename(BestSubset_CV = x) %>%
mutate(id = 1:3)
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id")
summary_table
View(summary_table)
test_error = c(bss.err.test, bic.err.test, test.lasso.cv test.error.lasso.bic, test.error.pcr)
c(bss.err.test, bic.err.test, test.lasso.cv test.error.lasso.bic, test.error.pcr)
bss.err.test
bic.err.test
bic.pred = predict(bss_bic$BestModel, newdata = df_test)
bic.resid = df_test$lpsa - bic.pred
bic.err.test = mean(bic.resid^2)
bic.err.test.se = sqrt(var(bic.resid^2)/length(bic.resid))
test_error = c(bss.err.test, bic.err.test, test.lasso.cv test.error.lasso.bic, test.error.pcr)
bss.pred = predict(bss_cv$BestModel, newdata = df_test)
bss.resid = df_test$lpsa - bss.pred
bss.err.test = mean(bss.resid^2)
bss.err.test.se = sqrt(var(bss.resid^2)/length(bss.resid))
bic.pred = predict(bss_bic$BestModel, newdata = df_test)
bic.resid = df_test$lpsa - bic.pred
bic.err.test = mean(bic.resid^2)
bic.err.test.se = sqrt(var(bic.resid^2)/length(bic.resid))
pred.lasso = predict.cv.glmnet(lasso_cv, newx = as.matrix(x_test), s = lambda_best)
resid = pred.lasso - y_test
test.lasso.cv = mean(resid^2)
test.lasso.cv.se = sqrt( var(resid^2) / length(resid) )
pred = predict(lasso_bic, s = lambda_best, newx = as.matrix(x_test))
resid = pred - y_test
test.error.lasso.bic = mean(resid^2)
test.error.se.lasso.bic = sqrt(var(resid^2)/length(resid))
pred = predict(pcr.fit, newx = x_test)
resid = pred - y_test
test.error.pcr = mean(resid^2)
test.error.se.pcr = sqrt(var(resid^2)/length(resid))
test_error = c(bss.err.test, bic.err.test, test.lasso.cv test.error.lasso.bic, test.error.pcr)
resid
bss.err.test
bic.err.test
test_error = c(bss.err.test, bic.err.test, test.lasso.cv, test.error.lasso.bic, test.error.pcr)
test_error
summary_table
test_error = c(test.lasso.cv, test.error.lasso.bic, test.error.pcr, bic.err.test, bss.err.test)
standard_error = c(test.lasso.cv.se, test.error.se.lasso.bic, test.error.se.pcr,bic.err.test.se ,bss.err.test.se)
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
rbind(test_error)
summary_table
names = data_frame(id )
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id")
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
select(-id) %>%
rbind(test_error)
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id")
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
dplyr::select(-id) %>%
rbind(test_error)
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
dplyr::select(-id) %>%
rbind(test_error, standard_error)
summary_table
variables = c("intercept", "lcavol", "lweight", "age", "lbph","svi", "lcp", "gleason", "pgg45", "test error", "standard error")
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
dplyr::select(-id) %>%
rbind(test_error, standard_error) %>%
cbind(variables)
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
dplyr::select(-id) %>%
rbind(test_error, standard_error) %>%
cbind(variables) %>%
dplyr::select(variables, everything())
summary_table
summary_table =
inner_join(names, lasso.coef, by = "id") %>%
inner_join(., coef.lasso.bic, by = "id") %>%
full_join(., coef.pcr, by = "id") %>%
full_join(., bic.coef[,2:3], by = "id") %>%
full_join(., bss.coef[,2:3], by = "id") %>%
dplyr::select(-id) %>%
rbind(test_error, standard_error) %>%
cbind(variables) %>%
dplyr::select(variables, everything()) %>%
knitr::kable(digits = 2)
summary_table
summary_table
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.55,0.85)+
labs(x = "Number of directions",
y = "CV errors",
title = "PCR in 5 fold CV")
lambda_best = plot4 %>% filter(k == 3) %>% filter(BIC == min(BIC)) %>% pull(lambda)
ggplot(bic_df,aes(x = k, y = bic)) +
geom_point( color = "red") +
geom_path() +
geom_hline(yintercept = cutoff4, linetype = "dashed") +
geom_vline(xintercept = 3, linetype = "dashed")
ggplot(bic_df,aes(x = k, y = bic)) +
geom_point( color = "red") +
geom_path() +
geom_hline(yintercept = cutoff4, linetype = "dashed") +
geom_vline(xintercept = 3, linetype = "dashed") +
labs(x = "Number of predictors in model",
y = "BIC",
title = "Lasso Regression with BIC")
ggplot(plot4, aes(x = log(lambda), y = BIC)) +
geom_path()+
labs(title = "Lasso Regression with BIC")
summary_table
plot3 %>%
ggplot(aes(x = s, y = cvm)) +
geom_errorbar(aes(ymin = cvm - se, ymax = cvm + se)) +
geom_line()+
geom_hline(yintercept = cutoff3, linetype = "dashed") +
geom_vline(xintercept = s_vline, linetype = "dashed") +
geom_point(color = "red") +
labs(x = "Shinkage factor S",
y = "Cross Validation error",
title = "Lasso Regression in 5 fold CV")+
theme_bw()
bic_df =
plot4 %>%
group_by(k) %>%
summarise(bic = min(BIC))+
theme_bw()
ggplot(plot4, aes(x = log(lambda), y = BIC)) +
geom_path()+
labs(title = "Lasso Regression with BIC")+
theme_bw()
ggplot(plot4, aes(x = log(lambda), y = BIC)) +
geom_path()+
labs(title = "Lasso Regression with BIC") +
theme_bw()
ggplot(bic_df,aes(x = k, y = bic)) +
geom_point( color = "red") +
geom_path() +
geom_hline(yintercept = cutoff4, linetype = "dashed") +
geom_vline(xintercept = 3, linetype = "dashed") +
labs(x = "Number of predictors in model",
y = "BIC",
title = "Lasso Regression with BIC")+
theme_bw()
ggplot(plot5, aes(x = m, y = cv)) +
geom_errorbar(ymin = cv - cv_error, ymax = cv + cv_error) +
geom_line() +
geom_hline(yintercept = cutoff5, linetype = "dashed") +
geom_vline(xintercept = m_vline, linetype = "dashed") +
geom_point(color = "red") +
ylim(0.55,0.85)+
labs(x = "Number of directions",
y = "CV errors",
title = "PCR in 5 fold CV")+
theme_bw()
ggplot(bic_df,aes(x = k, y = bic)) +
geom_point( color = "red") +
geom_path() +
geom_hline(yintercept = cutoff4, linetype = "dashed") +
geom_vline(xintercept = 3, linetype = "dashed") +
labs(x = "Number of predictors in model",
y = "BIC",
title = "Lasso Regression with BIC")+
theme_bw()
